<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- ===============LICENSE_START======================================================= 
		Acumos =================================================================================== 
		Copyright (C) 2018 AT&T Intellectual Property. All rights reserved. =================================================================================== 
		This Acumos software file is distributed by AT&T under the Apache License, 
		Version 2.0 (the "License"); you may not use this file except in compliance 
		with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
		This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS 
		OF ANY KIND, either express or implied. See the License for the specific 
		language governing permissions and limitations under the License. ===============LICENSE_END========================================================= -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.acumos.databroker.data-streamer</groupId>
	<artifactId>streamer-restproxy-service</artifactId>
	<!-- This version number is used to tag the Docker image. -->
	<version>1.0.0-SNAPSHOT</version>
	<name>Acumos Streamer RestProxy Service Server</name>
	<description>Micro service based on Spring-Boot</description>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.16.RELEASE</version>
		<!-- silence warning about parent relative path -->
		<relativePath />
	</parent>
	<properties>
		<encoding>UTF-8</encoding>
		<!-- Stand-alone RESTFul application -->
		<start-class>org.acumos.streamer.restproxy.DataStreamerRestProxyApplication</start-class>
		<!-- Jenkins invokes mvn with argument -Dbuild.number=${BUILD_NUMBER} -->
		<build.number>0</build.number>
		<!-- Not supplied to all jobs; e.g., Javadoc -->
		<docker.pull.registry>nexus3.acumos.org:10001</docker.pull.registry>
		<springfox.version>2.7.0</springfox.version>
		<!-- Supplied by Jenkins -->
		<docker.push.registry>${env.NEXUS3_PUSH_REGISTRY}</docker.push.registry>
	</properties>
	<dependencies>  
		<dependency>
			<groupId>com.github.docker-java</groupId>
			<artifactId>docker-java</artifactId>
			<version>3.0.10</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<!-- spring sets version -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- spring sets version -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<!-- spring sets version -->
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox.version}</version>
		</dependency>
			<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<!-- spring sets version -->
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<!-- Spring sets the <version>4.11</version> -->
			<scope>test</scope>
		</dependency>		
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<!-- spring sets the <version>4.3.1</version> -->
		</dependency>
		
	<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
		    <groupId>org.json</groupId>
		    <artifactId>json</artifactId>
		</dependency>
			<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>0.11.0.1</version>
		</dependency>	
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.14</version>
				<configuration>
					<licenseName>acumos</licenseName>
					<licenseResolver>${project.baseUri}/src/license</licenseResolver>
					<addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
					<processStartTag>===============LICENSE_START=======================================================</processStartTag>
					<processEndTag>===============LICENSE_END=========================================================</processEndTag>
					<sectionDelimiter>===================================================================================</sectionDelimiter>
					<inceptionYear>2017</inceptionYear>
					<organizationName><![CDATA[AT&T Intellectual Property. All rights reserved.]]></organizationName>
					<projectName>Acumos</projectName>
					<canUpdateCopyright>true</canUpdateCopyright>
					<canUpdateDescription>true</canUpdateDescription>
					<canUpdateLicense>true</canUpdateLicense>
					<emptyLineAfterHeader>true</emptyLineAfterHeader>
					<includes>
						<include>**/*.java</include>
						<!-- <include>**/*.js</include> -->
						<!-- <include>**/*.ts</include> -->
					</includes>
				</configuration>
			</plugin>
			<!-- Generate javadoc jar; see profile for Java 8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<!-- spring chooses the <version>x</version> -->
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			   <!-- Generate source jar -->
                          <plugin>
                                  <groupId>org.apache.maven.plugins</groupId>
                                 <artifactId>maven-source-plugin</artifactId>
                                 <version>3.0.0</version>
                                  <executions>
                                          <execution>
                                                 <id>attach-sources</id>
                                                  <goals>
                                                          <goal>jar</goal>
                                                  </goals>
                                          </execution>
                                 </executions>
                          </plugin>
                          <plugin>
                                 <groupId>org.jacoco</groupId>
                                  <artifactId>jacoco-maven-plugin</artifactId>
                                  <version>0.7.9</version>
                                  <executions>
                                          <execution>
                                                  <id>default-prepare-agent</id>
                                                  <goals>
                                                          <goal>prepare-agent</goal>
                                                  </goals>
                                          </execution>
                                          <execution>
                                                  <id>default-report</id>
                                                  <phase>prepare-package</phase>
                                                  <goals>
                                                          <goal>report</goal>
                                                  </goals>
                                          </execution>
                                  </executions>
                          </plugin>
                          <!-- Skip the deployment step, this makes jenkins config easy -->
                          <plugin>
                                  <groupId>org.apache.maven.plugins</groupId>
                                  <artifactId>maven-deploy-plugin</artifactId>
                                  <version>2.8.2</version>
                                  <configuration>
                                          <skip>true</skip>
                                  </configuration>
                          </plugin>
                          <plugin>
                                  <groupId>org.springframework.boot</groupId>
                                  <artifactId>spring-boot-maven-plugin</artifactId>
                          </plugin>
                      <plugin>
                                  <groupId>io.fabric8</groupId>
                                  <artifactId>docker-maven-plugin</artifactId>
                                  <version>0.21.0</version>
                                  <configuration>
                                          <verbose>true</verbose>
                                          <pullRegistry>${docker.pull.registry}</pullRegistry>
                                          <pushRegistry>${docker.push.registry}</pushRegistry>
                                          <images>
                                                  <image>
                                                          <name>databroker-zipbroker:${project.version}</name>
															<build>
                                                                    <from>frolvlad/alpine-oraclejdk8:slim</from>
                                                                 <tags>
                                                                    <tag>${project.version}-b${build.number}</tag>
                                                                 </tags>
                                                                 <assembly>
                                                                         <inline>                                                                                 
                                                                              <file>
                                                                                 <source>target/${project.artifactId}-${project.version}.${project.packaging}</source>
                                                                                   <outputDirectory />
                                                                               </file>
                                                                                 
                                                                          </inline>
                                                                  </assembly>
                                                                  <cmd>
                                                                         <shell><![CDATA[cd /maven; java -Xms128m -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar ${project.artifactId}-${project.version}.${project.packaging}]]></shell>
                                                                  </cmd>
                                                         </build>
                                                  </image>
                                          </images>
                                  </configuration>
                                  <executions>
                                          <execution>
                                                  <goals>
                                                          <goal>build</goal>
                                                          <goal>push</goal>
                                                  </goals>
                                         </execution>
                                 </executions>
                         </plugin>
                 </plugins>
          </build>
</project>
